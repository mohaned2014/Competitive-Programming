//uva 11462	Age Sort

#include <random>
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <deque>
#include <algorithm>    // std::reverse
#include <map>
#define loop(n)   for(int i=0;i<(n);i++)
#define loop1(n) for(int i=1;i<=(n);i++)
#define endl '\n'
int counter =0;
using namespace std;

void mergei(vector<int>::iterator LB,vector<int>::iterator LE ,vector<int>::iterator RB,vector<int>::iterator RE,vector<int>& output)
{
    auto it = output.begin();
    while(it!=output.end())
    {

        if(RB==RE ||(LB != LE && *LB <= *RB))
        {
            *it = *LB;
            LB++;
        }
        else
        {
            counter+= (LE-LB);
            *it = *RB;
            RB++;
        }
        it++;
    }

}
vector<int> div_merge( vector<int>& v1)
{
    //base case
    if(v1.size()<=1) return v1;
    vector<int> output(v1.size());

    //split
    int midpoint = v1.size()/2;
    vector<int> left(v1.begin(),v1.begin()+midpoint);
    vector<int> right(v1.begin()+midpoint,v1.end());
    //divide and sort
    left = div_merge(left);
    right = div_merge(right);

    //merge
    mergei(left.begin(),left.end(),right.begin(),right.end(),output);

    return output;

}
vector<int> countingsort(vector<int>& v1)
{
    vector<int> output(v1.size());
    int index =0;
    for( int i =0 ; i<v1.size() ;i++)
    {
        while(v1[i] != 0 )
        {
            output[index]=i;
            index++;
            v1[i]--;
        }
    }
    return output;
}

int main()
{
    cin.tie(0);
    cin.sync_with_stdio(0);

    int n;
    while( cin>>n && n!=0)
    {

        vector<int>v1(n+2);
        int temp;
        for(int i=0;i<n;i++)
        {
            cin>>temp;
            v1[temp]++;
        }
        v1 =countingsort(v1);
        for(int i =0;i<n-1;i++)
            cout<<v1[i]<<" ";
        cout<<v1[n-1];
        cout<<endl;


    }
}
